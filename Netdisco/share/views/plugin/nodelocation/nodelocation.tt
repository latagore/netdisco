<table id="node-location-data-table" class="table table-striped table-bordered" width="100%" cellspacing="0">
  <thead>
    <tr>
      <th>Search</th>
      <th>Node Info</th>
      <th>Switch Port</th>     
      <th>Cable</th>
      <th>Room</th>
      <th>Building</th> 
      <th>Age</th>      
    </tr>
  </thead>
</table>

<script type="text/javascript">
$(document).ready(function() {
  function formatValue(string){
    return (string != null) ? he.encode(string) : "";
  }
  var table = $('#node-location-data-table').dataTable({
    "deferRender": true,
    "data": [% results %],
    "columns": [
      {
        "data": 'ident',
        "render": function(data, type, row, meta) {
          return formatValue(data);
        }
      },
      {
        "data": null,
        "orderable": false,
        "render": function(data, type, row, meta) {
          if (type === 'display'){
            if (row.mac){
              var content =  '<a href="[% uri_for("/search") %]?tab=node&&deviceports=on&stamps=on&q='
                + formatValue(row.mac) + '">' + formatValue(row.mac)
                + '</a>';
              
              if (row.dns || row.ip){
                content += ' - <a href="[% uri_for("/search") %]?tab=node&deviceports=on&stamps=on&q='
                    + formatValue(row.ip) + '">';
                if (row.dns){
                  content += formatValue(row.dns) 
                    + ' (' + formatValue(row.ip) + ')';
                } else {
                  content += formatValue(row.ip);
                }
                content += '</a>';
              }
              return content;
            }
          } else {
            if (row.mac){
              var content = formatValue(row.mac)
              
              if (row.dns || row.ip){
                content += ' - ';
                if (row.dns){
                  content += formatValue(row.dns) 
                    + ' (' + formatValue(row.ip) + ')';
                } else {
                  content += formatValue(row.ip);
                }
              }
              return content;
            }
          }
          return '';
        }
      },
      {
        "data": null,
        "render": function(data, type, row, meta) {
          var cellContent = '';
          var dp = row.device_port;
          if (dp){
            var d = dp.device;
            if (d){
              if (type === 'display') {
                cellContent = '<a href=[% uri_for("/device") %]?tab=ports&q='
                + dp.ip + '&f=' + dp.port
                + '>'
                + formatValue(d.dns ? d.dns : dp.ip)
                + ' (' + dp.port + ')';
                + '</a>';
              } else {
                cellContent = (d.dns ? d.dns : dp.ip) 
                  + ', ' 
                  + (dp.port)
              }
            }
          }
          return cellContent;
        }
      },
      {
        "data": 'device_port.port_info.jack',
        render: function(data, type, row, meta) {
          return formatValue(data);
        }
      },
      {
        "data": 'device_port.port_info.room',
        render: function(data, type, row, meta) {
          return formatValue(data);
        }
      },      
      {
        "data": 'device_port.port_info.building.official_name.name',
        render: function(data, type, row, meta) {
          return formatValue(data);
        }
      }, 
      {
        data: 'hello',
        "render": function(data, type, row, meta) {
          if (type == 'display') {
            return he.encode(row.age || 'Never');
          }
          else {
            // so that sorting works correctly on this column
            return -row.time_last || 0;
          }
        }
      }
    ],
[% INCLUDE 'ajax/datatabledefaults.tt' -%]
  });
});
</script>
