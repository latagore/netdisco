<table id="node-location-data-table" class="table table-striped table-bordered" width="100%" cellspacing="0">
  <thead>
    <tr>
      <th>Node</th>
      <th>IPs</th>
      <th>Switch Port</th>     
      <th>Horizontal Cable</th>
      <th>Destination Room</th>
      <th>Building</th> 
      <th>Age</th>      
    </tr>
  </thead>
</table>

<script type="text/javascript">
$(document).ready(function() {
  function formatValue(string){
    return (string != null) ? he.encode(string) : "";
  }
  var table = $('#node-location-data-table').dataTable({
    "deferRender": true,
    "data": [% results %],
    "columns": [
      {
        "data": 'mac',
        "render": function(data, type, row, meta) {
           return formatValue(data);
        }
      },
      {
        "data": 'ips',
        "render": function(data, type, row, meta) {
          var cellContent = '';
          if (type === 'display') {
            cellContent += '<a href="[% uri_for("/search") %]?tab=node&&deviceports=on&stamps=on&q='
                + formatValue(row.mac) + '">' + formatValue(row.mac)
                + '</a><ul>';
            row.ips.forEach(function (el, i){
              cellContent += '<li><a href="[% uri_for("/search") %]?tab=node&deviceports=on&stamps=on&q='
                + formatValue(el.ip) + '">'
              if (el.dns != null){
                cellContent += formatValue(el.dns) 
                  + ' (' + formatValue(el.ip) + ')';
              } else {
                cellContent += formatValue(el.ip);
              }
              cellContent += '</a></li>';
            });
            cellContent += "</ul>";
          } else if (type === 'filter'){
            var entries = row.ips.slice();
            entries.unshift(formatValue(row.mac));
            cellContent = entries.join(', ');
          } else {
            cellContent = formatValue(row.mac);
          }
          return cellContent;
        }
      },
      {
        "data": null,
        "render": function(data, type, row, meta) {
          var cellContent = '';
          var dp = row.device_port;
          if (dp){
            var d = dp.device;
            if (d){
              if (type === 'display') {
                cellContent = '<a href=[% uri_for("/device") %]?tab=ports&q='
                + dp.ip + '&f=' + dp.port
                + '>'
                + formatValue(d.dns ? d.dns : dp.ip)
                + ' (' + dp.port + ')';
                + '</a>';
              } else {
                cellContent = (d.dns ? d.dns : dp.ip) 
                  + ', ' 
                  + (dp.port)
              }
            }
          }
          return cellContent;
        }
      },
      {
        "data": 'device_port.port_info.jack',
        render: function(data, type, row, meta) {
          return formatValue(data);
        }
      },
      {
        "data": 'device_port.port_info.room',
        render: function(data, type, row, meta) {
          return formatValue(data);
        }
      },      
      {
        "data": 'device_port.port_info.building.official_name.name',
        render: function(data, type, row, meta) {
          return formatValue(data);
        }
      }, 
      {
        "data": 'age',
        "render": function(data, type, row, meta) {
          if (type == 'display') {
            return he.encode(data || 'Never');
          }
          else {
            // so that sorting works correctly on this column
            return row.time_last;
          }
        }
      }
    ],
[% INCLUDE 'ajax/datatabledefaults.tt' -%]
  });
});
</script>
